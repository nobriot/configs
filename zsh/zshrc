# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
#ZSH_THEME="robbyrussell"
ZSH_THEME="ducknorris"
#ZSH_THEME="powerlevel9k/powerlevel9K"

COMPLETION_WAITING_DOTS="true"

plugins=(emoji encode64 colorize colored-man-pages rust virtualenv docker)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Brew
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"

# Rust defines
export RUST_LOG="debug"

#Android studio path:
export PATH=$PATH:/usr/local/android-studio
export PATH=$PATH:/usr/local/go/bin

# https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/INSTALL.md
source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh
ZSH_HIGHLIGHT_HIGHLIGHTERS+=(brackets pattern)

# https://github.com/zsh-users/zsh-autosuggestion
source /home/linuxbrew/.linuxbrew/share/zsh-autosuggestions/zsh-autosuggestions.zsh
bindkey '^f' autosuggest-accept
bindkey '^e' autosuggest-execute
bindkey '^w' forward-word
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=8,italic,underline"

# Go path
export GOPATH=$HOME/go
export PATH=$PATH:$GOROOT/bin:$GOPATH/bin

# Generic aliases
alias compress-pics='find . -iname "*.jpg" -exec convert {} -resize 1200x {} \;'
alias install-discord='find ~/Downloads -iname "discord*.deb" -exec sudo dpkg -i {} \; -exec rip {} \;'

# Git aliases
alias gf="git fetch --all -p"
alias gl="git log --oneline"
alias gp="git pull"
alias gbr="git branch -vv"

# Some eza shortcuts
alias l="eza --icons --git"
alias ll="l --long"
alias la="l --all"
alias lla="l --long --all"

# Fzf
source <(fzf --zsh)
alias fz="fzf --preview 'bat --color=always {}' --preview-window '~3'"
alias ff="find * | fzf --preview 'bat --color=always {}' --preview-window '~3' --prompt 'All> ' --header 'CTRL-D: D:irectories / CTRL-F: Files' --bind 'ctrl-d:change-prompt(Directories> )+reload(find * -type d)' --bind 'ctrl-f:change-prompt(Files> )+reload(find * -type f)'"
alias fo="fz --bind 'enter:execute(nvim {})'"

fh() {
  print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf +s --tac | sed -E 's/ *[0-9]*\*? *//' | sed -E 's/\\/\\\\/g')
}

fkill() {
  local pid 
  if [ "$UID" != "0" ]; then
    pid=$(ps -f -u $UID | sed 1d | fzf -m | awk '{print $2}')
  else
    pid=$(ps -ef | sed 1d | fzf -m | awk '{print $2}')
  fi  

  if [ "x$pid" != "x" ]
  then
    echo $pid | xargs kill -${1:-9}
  fi  
}

if [[ "$(uname)" == "Darwin" ]]; then
    # MacOS specific settings
    echo "Running on macOS"
    alias copy="pbcopy"
    alias paste="pbpaste"
elif [[ "$(uname)" == "Linux" ]]; then
    # Linux settings
    # Keyboard overdrive
    xset r rate 200 60
    # Map Caps-locks to Es
    setxkbmap -option caps:escape
    #Copy/paste
    alias copy="xsel --input --clipboard"
    alias paste="xsel --output --clipboard"
fi

# History configuration
HISTZISE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTZISE
HISDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# Completion styling
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# Starship
#export STARSHIP_CONFIG=~/.config/starship.toml
if !starship --version &> /dev/null
then
    echo "Installing starship"
    curl -sS https://starship.rs/install.sh | sh
fi
eval "$(starship init zsh)"

# Python pyenv
export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

if !delta --version &> /dev/null
then
    echo "Installing git-delta"
    cargo install git-delta
fi

if !spf --version &> /dev/null
then
    echo "Installing spf"
    bash -c "$(curl -sLo- https://superfile.netlify.app/install.sh)"
fi

# Added by alacritty
fpath+=${ZDOTDIR:-~}/.zsh_functions
